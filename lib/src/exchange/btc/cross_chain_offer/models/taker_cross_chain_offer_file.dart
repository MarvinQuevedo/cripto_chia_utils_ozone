import 'package:chia_crypto_utils/chia_crypto_utils.dart';
import 'package:compute/compute.dart';

/// The abstract class that holds parameters unique to offer files that are generated by the taker
/// of an offer and sent to the maker.
abstract class TakerCrossChainOfferFile implements CrossChainOfferFile {

  factory TakerCrossChainOfferFile._fromSerializedOfferFileTask(String serializedOfferFile) {
    return TakerCrossChainOfferFile.fromSerializedOfferFile(serializedOfferFile);
  }

  factory TakerCrossChainOfferFile.fromSerializedOfferFile(String serializedOfferFile) {
    final deserializedOfferFile = maybeFromSerializedOfferFile(serializedOfferFile);

    if (deserializedOfferFile == null) {
      throw InvalidCrossChainOfferType('ccoffer_accept');
    }
    return deserializedOfferFile;
  }
  Bytes get acceptedOfferHash;

  static TakerCrossChainOfferFile? maybeFromSerializedOfferFile(String serializedOfferFile) {
    try {
      final deserializedOfferFile =
          CrossChainOfferFile.fromSerializedOfferFile(serializedOfferFile);
      if (deserializedOfferFile is! TakerCrossChainOfferFile) {
        return null;
      }
      return deserializedOfferFile;
    } catch (e) {
      return null;
    }
  }

  static Future<TakerCrossChainOfferFile> fromSerializedOfferFileAsync(
    String serializedOfferFile,
  ) async {
    final result =
        await compute(TakerCrossChainOfferFile._fromSerializedOfferFileTask, serializedOfferFile);

    return result;
  }
}
